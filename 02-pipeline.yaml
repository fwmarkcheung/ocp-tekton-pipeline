apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: mark-demo-pipeline
spec:
  params:
    - default: mark-demo
      description: The application name
      name: APP_NAME
      type: string
    - default: 'https://github.com/fwmarkcheung/spring-boot-configmaps-demo.git'
      description: The application git repository url
      name: APP_GIT_URL
      type: string
    - default: main
      description: The application git repository revision
      name: APP_GIT_REVISION
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.APP_GIT_URL)
        - name: revision
          value: $(params.APP_GIT_REVISION)
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: app-source
    - name: build-and-test
      params:
        - name: GOALS
          value: ["clean", "package"]
            # - package
        # - name: PROXY_PROTOCOL
        #   value: http
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: app-source
        - name: maven-settings
          workspace: maven-settings
    - name: build-image
      params:
        - name: IMAGE
          value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.APP_NAME):latest
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
      runAfter:
        - build-and-test
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: app-source

    - name: tag-dev
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - build-image
      params:
        - name: SCRIPT
          value: oc tag $(params.APP_NAME):latest $(params.APP_NAME):dev

    - name: redeploy-dev
      params:
        - name: SCRIPT
          value: oc rollout restart deployment/$(params.APP_NAME) -n mark-config-map-dev
      runAfter:
        - tag-dev
      taskRef:
        kind: ClusterTask
        name: openshift-client

    - name: tag-prod
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
          - redeploy-dev
      params:
        - name: SCRIPT
          value: oc tag $(params.APP_NAME):dev $(params.APP_NAME):prod
    - name: redeploy-prod
      params:
        - name: SCRIPT
          value: oc rollout restart deployment/$(params.APP_NAME) -n mark-config-map-prod
      runAfter:
        - tag-prod
      taskRef:
        kind: ClusterTask
        name: openshift-client


    # - name: redeploy
    #   params:
    #     - name: SCRIPT
    #       value: oc rollout restart deployment/$(params.APP_NAME)
    #   runAfter:
    #     - build-image
    #   taskRef:
    #     kind: ClusterTask
    #     name: openshift-client

  workspaces:
    - name: app-source
    - name: maven-settings
